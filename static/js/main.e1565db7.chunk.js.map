{"version":3,"sources":["components/Input.module.css","components/Navbar.js","components/InputTask.js","components/LIstTask.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Navbar","className","href","Input","addTask","useState","task","setTask","date","setDate","priority","setPriority","class","styles","size","eLetter","restLetter","container","type","id","e","target","value","for","format","min","Date","toISOString","slice","onChange","checked","onClick","List","list","doneHandler","setList","listDone","setListDone","htmlList","map","style","color","date_done","toLocaleString","tablicaWykonany","DoneCounter","DoneHtmlList","length","containerDone","App","newTask","uniqid","myList","sort","a","b","M","toast","html","classes","idx","newList","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1565db7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Input_container__16MGs\",\"containerDone\":\"Input_containerDone__ptbnH\",\"priority\":\"Input_priority__3XPSI\",\"size\":\"Input_size__1KUOw\",\"animation\":\"Input_animation__gEHp0\",\"showUp\":\"Input_showUp__2aQkc\",\"eLetter\":\"Input_eLetter__2s-W2\",\"bop\":\"Input_bop__3ObuR\",\"restLetter\":\"Input_restLetter__oBi2Q\",\"bopB\":\"Input_bopB__21KGD\"};","import React, { useState } from \"react\";\nimport './Navbar.css'\nconst Navbar = () => {\n    return(\n        <div className=\"row\">\n\n            <nav>\n                <div className=\"nav-wrapper grey darken-3\">\n                    <div className=\"container\">\n                        <div className=\"row navRow\">\n                            <div className=\"col s1\">\n                                <a href=\"/\" className=\"brand-logo\">E-TASK</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </nav>\n        </div>\n    );\n};\n\nexport default  Navbar","import React, { useState } from \"react\";\nimport styles from \"./Input.module.css\";\nimport Navbar from \"./Navbar\";\nexport default function Input({ addTask }) {\n  const [task, setTask] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [priority, setPriority] = useState(false);\n\n  return (\n    <div>\n      <Navbar />\n      <h1 class={styles.size}>\n        <span className={styles.eLetter}>E-</span>\n        <span className={styles.restLetter}>TASK</span>\n      </h1>\n      <h2>19.04.2021</h2>\n      <h5 className=\"brown-text size\">Proszę, Dodaj zadanie do zrobienia</h5>\n      <div className={styles.container}>\n        <div class=\"row\">\n          <div class=\"input-field col s12\">\n            <i class=\"material-icons prefix\">mode_edit</i>\n            <textarea\n              type=\"text\"\n              id=\"task\"\n              class=\"autocomplete materialize-textarea\"\n              type=\"text\"\n              value={task}\n              onChange={(e) => setTask(e.target.value)}\n            />\n            <label for=\"task\">ZADANIE</label>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"input-field col s12\">\n            <i class=\"material-icons prefix\">date_range</i>\n            <input\n              type=\"date\"\n              id=\"date1\"\n              className=\"datepicker\"\n              value={date}\n              format=\"dd-MM-yyyy\"\n              min={new Date().toISOString().slice(0, 10)}\n              onChange={(e) => setDate(e.target.value)}\n            />\n            <label for=\"date1\">TERMIN WYKONANIA:</label>\n          </div>\n        </div>\n\n        <label>\n          <input\n            type=\"checkbox\"\n            value={priority}\n            checked={priority}\n            onChange={(e) => setPriority(e.target.checked)}\n          />\n          <span className={styles.priority}>Piorytet</span>\n        </label>\n\n        <button\n          className=\"btn waves-effect waves-light brown darken-1\"\n          type=\"submit\"\n          onClick={() => {\n            addTask(task, priority, date);\n            setTask(\"\");\n            setDate(\"\");\n            setPriority(false);\n          }}\n        >\n          <i className=\"material-icons right\">send</i> dodaj\n        </button>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport styles from \"./Input.module.css\";\nimport { useState } from \"react\";\n\nexport default function List({ list, doneHandler, setList }) {\n  const [listDone, setListDone] = useState([]);\n\n  const DoneCounter = (id, task) => {\n    const date_done = new Date().toLocaleString() + \"\";\n    const tablicaWykonany = [\n      ...listDone,\n      \"Zadanie: \" + task + \" | Wykonane: \" + date_done,\n    ];\n    setListDone(tablicaWykonany);\n    doneHandler(id);\n  };\n  const DeleteALlTask = () => {\n    setList([]);\n  };\n\n  const htmlList = list.map(({ id, priority, task, date }) => {\n    return (\n      <div>\n        <span key={id} style={{ color: priority ? \"red\" : \"black\" }}>\n          {\" \"}\n          {task} |Termin: {date} |{\" \"}\n        </span>\n        <a\n          class=\"btn-floating  deep-orange pulse btn-small\"\n          onClick={() => DoneCounter(id, task)}\n        >\n          <i class=\"material-icons\">done</i>\n        </a>{\" \"}\n        <a\n          class=\"btn-floating brown pulse btn-small\"\n          onClick={() => doneHandler(id)}\n        >\n          <i class=\"material-icons\">delete</i>\n        </a>\n      </div>\n    );\n  });\n\n  const DoneHtmlList = listDone.map((task) => {\n    return (\n      <div>\n        <span> {task} </span>\n      </div>\n    );\n  });\n  if (!list.length) {\n    return (\n      <div>\n        <h4>Zadania do zrobienia:</h4>\n        <div class={styles.container}>\n          <h5>Brak zadań do wyświetlenia! Jesteś na bieżąco</h5>\n        </div>\n        <h4>Zadania zrobione:</h4>\n        <div class={styles.containerDone}>\n          <h5>({listDone.length})</h5>\n          <div>{DoneHtmlList}</div>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <h4>Lista zadań do zrobienia:</h4>\n        <div class={styles.container}>\n          <h5>\n            <a\n              class=\"btn-floating btn-small waves-effect waves-light red\"\n              onClick={() => DeleteALlTask()}\n            >\n              <i class=\"material-icons\">delete_sweep</i>\n            </a>\n\n            {htmlList}\n          </h5>\n        </div>\n        <h4>Zadania zrobione:</h4>\n        <div class={styles.containerDone}>\n          <h5>({listDone.length})</h5>\n          <div>{DoneHtmlList}</div>\n        </div>\n      </div>\n    );\n  }\n}\n","import { useState } from \"react\";\nimport Input from \"./components/InputTask\";\nimport \"./App.css\";\nimport List from \"./components/LIstTask\";\nimport uniqid from \"uniqid\";\nimport M from \"materialize-css\";\nfunction App() {\n  const [list, setList] = useState([]);\n\n  const addTask = (task, priority, date) => {\n    const newTask = {\n      id: uniqid(),\n      task,\n      priority,\n      date,\n    };\n\n    if (task.length > 0 && date.length > 0) {\n      const myList = [...list, newTask];\n      myList.sort((a, b) => {\n        if (a.date < b.date) {\n          return -1;\n        }\n        if (a.date > b.date) {\n          return 1;\n        }\n        return 0;\n      });\n      setList(myList);\n    } else if (task.length == 0) {\n      M.toast({ html: \"Nie można wpisać pustego zadania\", classes: \"rounded\" });\n    } else {\n      M.toast({\n        html: \"Nie można dodać zadania bez podania daty\",\n        classes: \"rounded\",\n      });\n    }\n  };\n\n  const doneHandler = (idx) => {\n    const tmpList = [...list];\n    const newList = tmpList.filter(({ id }) => id !== idx);\n    setList(newList);\n  };\n\n  return (\n    <div className=\"App\">\n      <Input addTask={addTask} />\n      <List list={list} doneHandler={doneHandler} setList={setList} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}